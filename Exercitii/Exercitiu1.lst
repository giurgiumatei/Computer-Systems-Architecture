     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit
     8                                  extern fscanf
     9                                  extern fopen
    10                                  extern fclose
    11                                  extern printf
    12                                  import fscanf msvcrt.dll
    13                                  import fopen msvcrt.dll
    14                                  import printf msvcrt.dll     
    15                                  import fclose msvcrt.dll         
    16                                  import exit msvcrt.dll    
    17                                  
    18                                  ; our data is declared here (the variables needed by our program)
    19                                  segment data use32 class=data
    20                                  
    21 00000000 7200                    modread db 'r',0
    22 00000002 6E756D6572652E7478-     inputfile db 'numere.txt',0
    22 0000000B 7400               
    23 0000000D FFFFFFFF                handle dd -1
    24 00000011 2564000000000000        print_format dd '%d',0
    25 00000019 2564000000000000        read_format dd '%d',0
    26                                  space equ ' '
    27 00000021 00000000                a dd 0
    28 00000025 00000000                cont dd 0
    29                                  
    30                                  
    31                                  
    32                                    
    33                                    
    34                                    
    35                                  segment code use32 class=code
    36                                      start:
    37                                          
    38 00000000 68[00000000]                    push dword modread
    39 00000005 68[02000000]                    push dword inputfile
    40 0000000A FF15[00000000]                  call [fopen]
    41 00000010 83C408                          add esp, 4*2
    42                                          
    43 00000013 83F800                          cmp eax,0
    44 00000016 7440                            je final
    45                                          
    46 00000018 A3[0D000000]                    mov [handle],eax
    47                                          
    48                                          repeat:
    49                                          
    50                                              
    51 0000001D 68[21000000]                        push dword a
    52 00000022 68[19000000]                        push dword read_format
    53 00000027 FF35[0D000000]                      push dword [handle]
    54 0000002D FF15[00000000]                      call [fscanf]
    55 00000033 83C40C                              add esp,4*3
    56                                              
    57 00000036 83F8FF                              cmp eax,-1
    58 00000039 741D                                je final
    59                                              
    60 0000003B A1[21000000]                        mov eax,[a]
    61 00000040 83F820                              cmp eax,space
    62 00000043 74D8                                je repeat
    63                                              
    64 00000045 B302                                mov bl,2
    65 00000047 F6F3                                div bl
    66 00000049 80FC00                              cmp AH,0
    67 0000004C 7402                                je is_odd
    68 0000004E EBCD                                jmp repeat
    69                                              
    70                                             
    71                                              
    72                                              
    73                                              
    74                                          is_odd:
    75 00000050 FF05[25000000]                      inc dword [cont]
    76 00000056 EBC5                                jmp repeat
    77                                              
    78                                              
    79                                              
    80                                          
    81                                              
    82                                              
    83                                          final:
    84                                          
    85 00000058 FF35[0D000000]                      push dword [handle]
    86 0000005E FF15[00000000]                      call [fclose]
    87 00000064 83C404                              add esp,4
    88                                              
    89 00000067 FF35[25000000]                      push dword [cont]
    90 0000006D 68[11000000]                        push dword print_format
    91 00000072 FF15[00000000]                      call [printf]
    92 00000078 83C408                              add esp,4*2
    93                                          
    94                                          
    95                                          
    96 0000007B 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    97 0000007D FF15[00000000]                      call    [exit]       ; call exit to terminate the program
