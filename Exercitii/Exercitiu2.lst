     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit
     8                                  extern fscanf
     9                                  extern fopen
    10                                  extern fclose
    11                                  extern printf
    12                                  extern fread
    13                                  import fscanf msvcrt.dll
    14                                  import fopen msvcrt.dll
    15                                  import printf msvcrt.dll     
    16                                  import fclose msvcrt.dll         
    17                                  import exit msvcrt.dll    
    18                                  import fread msvcrt.dll
    19                                  
    20                                  ; our data is declared here (the variables needed by our program)
    21                                  segment data use32 class=data
    22                                  
    23 00000000 7200                    modread db 'r',0
    24 00000002 6E756D6572652E7478-     inputfile db 'numere.txt',0
    24 0000000B 7400               
    25 0000000D FFFFFFFF                handle dd -1
    26 00000011 2564000000000000        print_format dd '%d',0
    27 00000019 2564000000000000        read_format dd '%d',0
    28                                  space equ ' '
    29 00000021 00000000                a dd 0
    30 00000025 00000000                cont dd 0
    31                                  
    32                                  
    33                                  
    34                                    
    35                                    
    36                                    
    37                                  segment code use32 class=code
    38                                      start:
    39                                          
    40 00000000 68[00000000]                    push dword modread
    41 00000005 68[02000000]                    push dword inputfile
    42 0000000A FF15[00000000]                  call [fopen]
    43 00000010 83C408                          add esp, 4*2
    44                                          
    45 00000013 83F800                          cmp eax,0
    46 00000016 743F                            je final
    47                                          
    48 00000018 A3[0D000000]                    mov [handle],eax
    49                                          
    50                                          repeat:
    51 0000001D FF35[0D000000]                      push dword [handle]
    52                                          
    53 00000023 6A01                                push dword 1
    54 00000025 6A01                                push dword 1
    55 00000027 68[21000000]                        push dword a
    56 0000002C FF15[00000000]                      call [fread]
    57 00000032 83C410                              add esp,4*4
    58                                              
    59 00000035 83F800                              cmp eax,0
    60 00000038 741D                                je final
    61                                              
    62 0000003A A1[21000000]                        mov eax,[a]
    63 0000003F 83F820                              cmp eax,space
    64 00000042 74D9                                je repeat
    65                                              
    66 00000044 B302                                mov bl,2
    67 00000046 F6F3                                div bl
    68 00000048 80FC00                              cmp AH,0
    69 0000004B 7402                                je is_odd
    70 0000004D EBCE                                jmp repeat
    71                                              
    72                                             
    73                                              
    74                                              
    75                                              
    76                                          is_odd:
    77 0000004F FF05[25000000]                      inc dword [cont]
    78 00000055 EBC6                                jmp repeat
    79                                              
    80                                              
    81                                              
    82                                          
    83                                              
    84                                              
    85                                          final:
    86                                          
    87 00000057 FF35[0D000000]                      push dword [handle]
    88 0000005D FF15[00000000]                      call [fclose]
    89 00000063 83C404                              add esp,4
    90                                              
    91 00000066 FF35[25000000]                      push dword [cont]
    92 0000006C 68[11000000]                        push dword print_format
    93 00000071 FF15[00000000]                      call [printf]
    94 00000077 83C408                              add esp,4*2
    95                                          
    96                                          
    97                                          
    98 0000007A 6A00                                push    dword 0      ; push the parameter for exit onto the stack
    99 0000007C FF15[00000000]                      call    [exit]       ; call exit to terminate the program
